# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Hubctl < Formula
  desc "Hub CTL is stack composition and lifecycle tool."
  homepage "https://superhub.io/"
  version "1.0.13"
  license "MPL-2.0"

  depends_on "jq"
  depends_on "yq"
  depends_on "npm" => :optional

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epam/hubctl/releases/download/v1.0.13/hubctl_Darwin_arm64.tar.gz"
      sha256 "41a4284ff2ebc353dd84dd045ca6c8863871b2d16355bbb521e5bce2c6313ade"

      def install
        bin.install "hubctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epam/hubctl/releases/download/v1.0.13/hubctl_Darwin_x86_64.tar.gz"
      sha256 "54926180a4172266e6386f1335dafebf882189d8c08d90c0b108329e24c1d4e4"

      def install
        bin.install "hubctl"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epam/hubctl/releases/download/v1.0.13/hubctl_Linux_arm64.tar.gz"
      sha256 "38c42d3e7a5b6f642917bf5758aa9a1468dbf71628f9864d70aedca4c953dc04"

      def install
        bin.install "hubctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epam/hubctl/releases/download/v1.0.13/hubctl_Linux_x86_64.tar.gz"
      sha256 "22e6dad493601d166c2e4ea5638d5982e7d4cf901160ee142dc313d2a71ecfda"

      def install
        bin.install "hubctl"
      end
    end
  end

  head "https://github.com/epam/hubctl"

  def post_install
    hub_home = Pathname.new "#{Dir.home}/.hub"
    unless hub_home.exist?
        system "#{Formula["hub"].opt_bin}/hubctl", "extensions", "install"
    end
  end

  def caveats
    <<~EOS
      hubctl version
      hubctl help
      hubctl elaborate hub.yaml params.yaml -o hub.yaml.elaborate
      hubctl deploy hub.yaml.elaborate -e NAME=stage
    EOS
  end

  test do
    output = shell_output("#{bin}/hubctl version").chomp
    assert output.start_with?("Hub CTL git ")
    system "false"
  end
end
