# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Hubctl < Formula
  desc "Hub CTL is stack composition and lifecycle tool."
  homepage "https://superhub.io/"
  version "1.0.12"
  license "MPL-2.0"

  depends_on "jq"
  depends_on "yq"
  depends_on "npm" => :optional

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epam/hubctl/releases/download/v1.0.12/hubctl_Darwin_arm64.tar.gz"
      sha256 "7033c365eea451cbac73bebedf035f42050a72f6bbb6c327ad672c15a6941201"

      def install
        bin.install "hubctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epam/hubctl/releases/download/v1.0.12/hubctl_Darwin_x86_64.tar.gz"
      sha256 "451853693d7dd2025f947326297899f8684fa8f6ffada8ed57c1703a818d198e"

      def install
        bin.install "hubctl"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epam/hubctl/releases/download/v1.0.12/hubctl_Linux_arm64.tar.gz"
      sha256 "7a8df93a0a32cda8b13d6de7153089db17c8d332804ae3d1b4ee25abc85298b9"

      def install
        bin.install "hubctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epam/hubctl/releases/download/v1.0.12/hubctl_Linux_x86_64.tar.gz"
      sha256 "9ab7baec2a14723e8cfe18000d8f41e7e392b77540714db136934c8dba91ca69"

      def install
        bin.install "hubctl"
      end
    end
  end

  head "https://github.com/epam/hubctl"

  def post_install
    hub_home = Pathname.new "#{Dir.home}/.hub"
    unless hub_home.exist?
        system "#{Formula["hub"].opt_bin}/hubctl", "extensions", "install"
    end
  end

  def caveats
    <<~EOS
      hubctl version
      hubctl help
      hubctl elaborate hub.yaml params.yaml -o hub.yaml.elaborate
      hubctl deploy hub.yaml.elaborate -e NAME=stage
    EOS
  end

  test do
    output = shell_output("#{bin}/hubctl version").chomp
    assert output.start_with?("Hub CTL git ")
    system "false"
  end
end
